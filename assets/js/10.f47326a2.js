(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{403:function(e,n,t){"use strict";t.r(n);var o=t(5),r=Object(o.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("react 18(https://react.dev/blog/2022/03/29/react-v18)")]),e._v(" "),n("p",[e._v("Concurrency (fiber node schedule)\nNew hooks Transitions\nAutomatic Batching\nSuspense component\nServer component")]),e._v(" "),n("p",[e._v("找 1w 树前 10 大的树\nnew 一个 array 10 并排序，用剩下的每次和最小的比（依次上）")]),e._v(" "),n("p",[e._v("事件，冒泡，捕获，委托")]),e._v(" "),n("p",[e._v("event 冒泡 stopPropagation zindex 高层级节点向 parent node 冒泡。\npreventDefault()\naddEventListener(type,fn,options) capture（事件捕获） noce passive(申明调用 preventDefault)\nonclick")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://blog.fundebug.com/2019/01/15/diffrences-of-browser-and-node-in-event-loop/",target:"_blank",rel:"noopener noreferrer"}},[e._v("node event loop"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("timers 阶段：这个阶段执行 timer（setTimeout、setInterval）的回调\nI/O callbacks 阶段：处理一些上一轮循环中的少数未执行的 I/O 回调\nidle, prepare 阶段：仅 node 内部使用\npoll 阶段：获取新的 I/O 事件, 适当的条件下 node 将阻塞在这里（wait for incoming request）\ncheck 阶段：执行 setImmediate() 的回调\nclose callbacks 阶段：执行 socket 的 close 事件回调")]),e._v(" "),n("p",[e._v("外部输入数据–>轮询阶段(poll)–>检查阶段(check)–>关闭事件回调阶段(close callback)–>定时器检测阶段(timer)–>I/O 事件回调阶段(I/O callbacks)–>闲置阶段(idle, prepare)–>轮询阶段（按照该顺序反复运行")]),e._v(" "),n("p",[e._v("箭头函数，普通函数\n没有 arguments prototype\nthis 不同，不能用 bind call apply\n写法")]),e._v(" "),n("p",[e._v("undo redo")]),e._v(" "),n("ol",[n("li",[e._v("command 的逆命令")]),e._v(" "),n("li",[e._v("每次状态都有快照")])]),e._v(" "),n("p",[e._v("懒加载\nIntersectionObserver\nimg.lazy\ngetBoundingClientRect")]),e._v(" "),n("p",[e._v("flex:1\nflex-grow<default: 0>: 放大比例，有剩余空间，是否/如何放大\nflex-shrink<default 1>: 缩小比例，空间不够，是否/如何缩小\nflex-basis<default: 0%>: 盒子基准值")]),e._v(" "),n("p",[e._v("sessionStorage: 生命周期等同于当前 tab，在当前 tab 刷新后仍旧存在，但另开一个没有")]),e._v(" "),n("p",[e._v("引起重排的属性: 主要看影响布局的\n引起重绘的属性: 主要看影响外观的\ntemp1.setAttribute('style',"),n("code",[e._v("color: red; font-size: 22px")]),e._v(")\ntemp1.style = "),n("code",[e._v("color: red; font-size: 22px")]),e._v("\nDocumentFragment")]),e._v(" "),n("p",[e._v("promise.any 任意一个成功或者都失败\npromise.race 任意一个成功或者失败")]),e._v(" "),n("p",[e._v("defer 在 domcontentloaded 之后，但是不阻碍 dom 渲染，彼此之间有序\nasync 完全异步\n在实际开发中，defer 用于需要整个 DOM 的脚本，和/或脚本的相对执行顺序很重要的时候。\nasync 用于独立脚本，例如计数器或广告，这些脚本的相对执行顺序无关紧要。")]),e._v(" "),n("p",[e._v("DoS（拒绝服务攻击，Denial of Service）是一种网络攻击手段，它通过给服务器发送大量请求来阻止对资源的合法使用。")]),e._v(" "),n("p",[e._v("跨站脚本攻击（Cross-site scripting，XSS）是一种安全漏洞，攻击者可以利用这种漏洞在网站上注入恶意的客户端代码。若受害者运行这些恶意代码，攻击者就可以突破网站的访问限制并冒充受害者")]),e._v(" "),n("p",[e._v("CSRF（Cross-site request forgery）跨站请求伪造：攻击者诱导受害者进入第三方网站，在第三方网站中，向被攻击网站发送跨站请求")]),e._v(" "),n("p",[e._v("中间人攻击（Man-in-the-middle attack，MitM）会在消息发出方和接收方之间拦截双方通讯")]),e._v(" "),n("p",[e._v("git merge --squash Abranch")]),e._v(" "),n("p",[e._v("object.is()\n== 做隐式转换\n=== 对数字处理上不同，NaN, +0 -0")]),e._v(" "),n("p",[e._v("http 缓存\nexpire\ncache-control\n304 协商缓存")])])}),[],!1,null,null,null);n.default=r.exports}}]);